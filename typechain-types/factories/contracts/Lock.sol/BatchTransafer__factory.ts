/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BatchTransafer,
  BatchTransaferInterface,
} from "../../../contracts/Lock.sol/BatchTransafer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "fromAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "toAddress",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "recipientAmount",
        type: "uint256[]",
      },
    ],
    name: "BatchTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "fromAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "tokenAddress",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "toAddress",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "recipientAmount",
        type: "uint256[]",
      },
    ],
    name: "BatchTransferMultiToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "fromAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "toAddress",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "recipientAmount",
        type: "uint256[]",
      },
    ],
    name: "BatchTransferToken",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddress",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferMultiTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611aad806100206000396000f3fe6080604052600436106100385760003560e01c806320651d5d1461004757806388d695b2146100705780638deab3de1461008c57610039565b5b34801561004557600080fd5b005b34801561005357600080fd5b5061006e60048036038101906100699190610ea4565b6100b5565b005b61008a60048036038101906100859190610f39565b6106e8565b005b34801561009857600080fd5b506100b360048036038101906100ae9190610fba565b610926565b005b8181905084849050146100fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f4906110f1565b60405180910390fd5b6000805b858590508110156101465783838281811061011f5761011e611111565b5b90506020020135826101319190611179565b9150808061013e906111ad565b915050610101565b506000869050818173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610188929190611204565b602060405180830381865afa1580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c99190611259565b101561020a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610201906112f8565b60405180910390fd5b818173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102449190611318565b602060405180830381865afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102859190611259565b10156102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd9061137f565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff163330856040516024016102f4939291906113ae565b6040516020818303038152906040527f23b872dd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161037e9190611456565b6000604051808303816000865af19150503d80600081146103bb576040519150601f19603f3d011682016040523d82523d6000602084013e6103c0565b606091505b5050905080610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb906114b9565b60405180910390fd5b828273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161043e9190611318565b602060405180830381865afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190611259565b10156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b79061154b565b60405180910390fd5b60005b8787905081101561065e5760008373ffffffffffffffffffffffffffffffffffffffff168989848181106104fa576104f9611111565b5b905060200201602081019061050f919061156b565b88888581811061052257610521611111565b5b9050602002013560405160240161053a929190611598565b6040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105c49190611456565b6000604051808303816000865af19150503d8060008114610601576040519150601f19603f3d011682016040523d82523d6000602084013e610606565b606091505b505090508061064a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106419061160d565b60405180910390fd5b508080610656906111ad565b9150506104c3565b50868660405161066f9291906116ea565b60405180910390208873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa03f0ed2739df8cf3a61713fd9034ac4563c01eaaa4efe42524d1319c385513988886040516106d692919061177e565b60405180910390a45050505050505050565b6000828290508585905014610732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072990611814565b60405180910390fd5b60005b8585905081101561077a5783838281811061075357610752611111565b5b90506020020135826107659190611179565b91508080610772906111ad565b915050610735565b508034146107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490611880565b60405180910390fd5b60005b858590508110156108cb5760008686838181106107e0576107df611111565b5b90506020020160208101906107f5919061156b565b73ffffffffffffffffffffffffffffffffffffffff1685858481811061081e5761081d611111565b5b90506020020135604051610831906118c6565b60006040518083038185875af1925050503d806000811461086e576040519150601f19603f3d011682016040523d82523d6000602084013e610873565b606091505b50509050806108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae90611927565b60405180910390fd5b5080806108c3906111ad565b9150506107c0565b5084846040516108dc9291906116ea565b60405180910390207fd76871a3b9b205c530f73884df11af482cc4ac28f71bdb2f15a98e79a3a7907633858560405161091793929190611947565b60405180910390a25050505050565b838390508686905014801561094057508181905086869050145b61097f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610976906110f1565b60405180910390fd5b60005b86869050811015610cf85760008787838181106109a2576109a1611111565b5b90506020020160208101906109b7919061156b565b90508383838181106109cc576109cb611111565b5b905060200201358173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610a0e929190611204565b602060405180830381865afa158015610a2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190611259565b1015610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a87906112f8565b60405180910390fd5b838383818110610aa357610aa2611111565b5b905060200201358173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ae39190611318565b602060405180830381865afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190611259565b1015610b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5c906119c5565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1633888886818110610b9257610b91611111565b5b9050602002016020810190610ba7919061156b565b878787818110610bba57610bb9611111565b5b90506020020135604051602401610bd3939291906113ae565b6040516020818303038152906040527f23b872dd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c5d9190611456565b6000604051808303816000865af19150503d8060008114610c9a576040519150601f19603f3d011682016040523d82523d6000602084013e610c9f565b606091505b5050905080610ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cda90611a57565b60405180910390fd5b50508080610cf0906111ad565b915050610982565b508383604051610d099291906116ea565b60405180910390208686604051610d219291906116ea565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167fcf1075ee8a4425118fb210d430c4f15db84e74c5db74db0fe12eda7d7e06fd078585604051610d7192919061177e565b60405180910390a4505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610db682610d8b565b9050919050565b610dc681610dab565b8114610dd157600080fd5b50565b600081359050610de381610dbd565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e0e57610e0d610de9565b5b8235905067ffffffffffffffff811115610e2b57610e2a610dee565b5b602083019150836020820283011115610e4757610e46610df3565b5b9250929050565b60008083601f840112610e6457610e63610de9565b5b8235905067ffffffffffffffff811115610e8157610e80610dee565b5b602083019150836020820283011115610e9d57610e9c610df3565b5b9250929050565b600080600080600060608688031215610ec057610ebf610d81565b5b6000610ece88828901610dd4565b955050602086013567ffffffffffffffff811115610eef57610eee610d86565b5b610efb88828901610df8565b9450945050604086013567ffffffffffffffff811115610f1e57610f1d610d86565b5b610f2a88828901610e4e565b92509250509295509295909350565b60008060008060408587031215610f5357610f52610d81565b5b600085013567ffffffffffffffff811115610f7157610f70610d86565b5b610f7d87828801610df8565b9450945050602085013567ffffffffffffffff811115610fa057610f9f610d86565b5b610fac87828801610e4e565b925092505092959194509250565b60008060008060008060608789031215610fd757610fd6610d81565b5b600087013567ffffffffffffffff811115610ff557610ff4610d86565b5b61100189828a01610df8565b9650965050602087013567ffffffffffffffff81111561102457611023610d86565b5b61103089828a01610df8565b9450945050604087013567ffffffffffffffff81111561105357611052610d86565b5b61105f89828a01610e4e565b92509250509295509295509295565b600082825260208201905092915050565b7f54686520696e70757420617272617973206d757374206861766520746865207360008201527f616d65206c656e67746800000000000000000000000000000000000000000000602082015250565b60006110db602a8361106e565b91506110e68261107f565b604082019050919050565b6000602082019050818103600083015261110a816110ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061118482611140565b915061118f83611140565b92508282019050808211156111a7576111a661114a565b5b92915050565b60006111b882611140565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111ea576111e961114a565b5b600182019050919050565b6111fe81610dab565b82525050565b600060408201905061121960008301856111f5565b61122660208301846111f5565b9392505050565b61123681611140565b811461124157600080fd5b50565b6000815190506112538161122d565b92915050565b60006020828403121561126f5761126e610d81565b5b600061127d84828501611244565b91505092915050565b7f4e6f742073756666696369656e7420616c6c6f77616e636520666f722062617460008201527f636820746f207061790000000000000000000000000000000000000000000000602082015250565b60006112e260298361106e565b91506112ed82611286565b604082019050919050565b60006020820190508181036000830152611311816112d5565b9050919050565b600060208201905061132d60008301846111f5565b92915050565b7f6e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b600061136960108361106e565b915061137482611333565b602082019050919050565b600060208201905081810360008301526113988161135c565b9050919050565b6113a881611140565b82525050565b60006060820190506113c360008301866111f5565b6113d060208301856111f5565b6113dd604083018461139f565b949350505050565b600081519050919050565b600081905092915050565b60005b838110156114195780820151818401526020810190506113fe565b60008484015250505050565b6000611430826113e5565b61143a81856113f0565b935061144a8185602086016113fb565b80840191505092915050565b60006114628284611425565b915081905092915050565b7f426174636845524332305061796d656e74207061796d656e74206661696c6564600082015250565b60006114a360208361106e565b91506114ae8261146d565b602082019050919050565b600060208201905081810360008301526114d281611496565b9050919050565b7f536d61727420636f6e747261637420646f6573206e6f74206861766520656e6f60008201527f7567682042616c616e6365000000000000000000000000000000000000000000602082015250565b6000611535602b8361106e565b9150611540826114d9565b604082019050919050565b6000602082019050818103600083015261156481611528565b9050919050565b60006020828403121561158157611580610d81565b5b600061158f84828501610dd4565b91505092915050565b60006040820190506115ad60008301856111f5565b6115ba602083018461139f565b9392505050565b7f556e61626c6520746f207472616e736665722066756e64000000000000000000600082015250565b60006115f760178361106e565b9150611602826115c1565b602082019050919050565b60006020820190508181036000830152611626816115ea565b9050919050565b600081905092915050565b6000819050919050565b61164b81610dab565b82525050565b600061165d8383611642565b60208301905092915050565b60006116786020840184610dd4565b905092915050565b6000602082019050919050565b6000611699838561162d565b93506116a482611638565b8060005b858110156116dd576116ba8284611669565b6116c48882611651565b97506116cf83611680565b9250506001810190506116a8565b5085925050509392505050565b60006116f782848661168d565b91508190509392505050565b600082825260208201905092915050565b600080fd5b82818337505050565b600061172e8385611703565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561176157611760611714565b5b602083029250611772838584611719565b82840190509392505050565b60006020820190508181036000830152611799818486611722565b90509392505050565b7f54686520696e707574206172726179206d75737420686176652074686520736160008201527f6d65206c656e6768740000000000000000000000000000000000000000000000602082015250565b60006117fe60298361106e565b9150611809826117a2565b604082019050919050565b6000602082019050818103600083015261182d816117f1565b9050919050565b7f496e7375666669656e742062616c616e63650000000000000000000000000000600082015250565b600061186a60128361106e565b915061187582611834565b602082019050919050565b600060208201905081810360008301526118998161185d565b9050919050565b50565b60006118b06000836113f0565b91506118bb826118a0565b600082019050919050565b60006118d1826118a3565b9150819050919050565b7f5472616e73616374696f6e206973206661696c65642000000000000000000000600082015250565b600061191160168361106e565b915061191c826118db565b602082019050919050565b6000602082019050818103600083015261194081611904565b9050919050565b600060408201905061195c60008301866111f5565b818103602083015261196f818486611722565b9050949350505050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006119af60108361106e565b91506119ba82611979565b602082019050919050565b600060208201905081810360008301526119de816119a2565b9050919050565b7f42617463685472616e736665724d756c7469546f6b656e73207061796d656e7460008201527f206661696c656400000000000000000000000000000000000000000000000000602082015250565b6000611a4160278361106e565b9150611a4c826119e5565b604082019050919050565b60006020820190508181036000830152611a7081611a34565b905091905056fea26469706673582212203013173b8078bdec7224b2d0214943bfc362f485c2263dbf1d80a88663b5e5d664736f6c63430008110033";

type BatchTransaferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchTransaferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchTransafer__factory extends ContractFactory {
  constructor(...args: BatchTransaferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BatchTransafer> {
    return super.deploy(overrides || {}) as Promise<BatchTransafer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BatchTransafer {
    return super.attach(address) as BatchTransafer;
  }
  override connect(signer: Signer): BatchTransafer__factory {
    return super.connect(signer) as BatchTransafer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchTransaferInterface {
    return new utils.Interface(_abi) as BatchTransaferInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchTransafer {
    return new Contract(address, _abi, signerOrProvider) as BatchTransafer;
  }
}
